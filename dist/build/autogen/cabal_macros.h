/* DO NOT EDIT: This file is automatically generated by Cabal */

/* package HUnit-1.2.2.0 */
#define MIN_VERSION_HUnit(major1,major2,minor) \
  (major1) <  1 || \
  (major1) == 1 && (major2) <  2 || \
  (major1) == 1 && (major2) == 2 && (minor) <= 2

/* package QuickCheck-2.1.0.2 */
#define MIN_VERSION_QuickCheck(major1,major2,minor) \
  (major1) <  2 || \
  (major1) == 2 && (major2) <  1 || \
  (major1) == 2 && (major2) == 1 && (minor) <= 0

/* package base-4.1.0.0 */
#define MIN_VERSION_base(major1,major2,minor) \
  (major1) <  4 || \
  (major1) == 4 && (major2) <  1 || \
  (major1) == 4 && (major2) == 1 && (minor) <= 0

/* package containers-0.2.0.1 */
#define MIN_VERSION_containers(major1,major2,minor) \
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 0

/* package haskell98-1.0.1.0 */
#define MIN_VERSION_haskell98(major1,major2,minor) \
  (major1) <  1 || \
  (major1) == 1 && (major2) <  0 || \
  (major1) == 1 && (major2) == 0 && (minor) <= 1

/* package hslogger-1.0.7 */
#define MIN_VERSION_hslogger(major1,major2,minor) \
  (major1) <  1 || \
  (major1) == 1 && (major2) <  0 || \
  (major1) == 1 && (major2) == 0 && (minor) <= 7

/* package mtl-1.1.0.2 */
#define MIN_VERSION_mtl(major1,major2,minor) \
  (major1) <  1 || \
  (major1) == 1 && (major2) <  1 || \
  (major1) == 1 && (major2) == 1 && (minor) <= 0

/* package parsec-2.1.0.1 */
#define MIN_VERSION_parsec(major1,major2,minor) \
  (major1) <  2 || \
  (major1) == 2 && (major2) <  1 || \
  (major1) == 2 && (major2) == 1 && (minor) <= 0

/* package pretty-1.0.1.0 */
#define MIN_VERSION_pretty(major1,major2,minor) \
  (major1) <  1 || \
  (major1) == 1 && (major2) <  0 || \
  (major1) == 1 && (major2) == 0 && (minor) <= 1

/* package syb-0.1.0.1 */
#define MIN_VERSION_syb(major1,major2,minor) \
  (major1) <  0 || \
  (major1) == 0 && (major2) <  1 || \
  (major1) == 0 && (major2) == 1 && (minor) <= 0

/* package template-haskell-2.3.0.1 */
#define MIN_VERSION_template_haskell(major1,major2,minor) \
  (major1) <  2 || \
  (major1) == 2 && (major2) <  3 || \
  (major1) == 2 && (major2) == 3 && (minor) <= 0

/* package utf8-string-0.3.5 */
#define MIN_VERSION_utf8_string(major1,major2,minor) \
  (major1) <  0 || \
  (major1) == 0 && (major2) <  3 || \
  (major1) == 0 && (major2) == 3 && (minor) <= 5

